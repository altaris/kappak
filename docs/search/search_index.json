{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"kappak Introduction This is a homemade LaTeX package regrouping functionalities I deem handy. It is provided under the MIT license. Documentation Reasonably up to date. Installation Linux On Linux: execute the following commands in your favorite terminal: git clone https://github.com/altaris/kappak.git cd kappak make install You're all set! Windows On Winslows: create a folder this/is/a/path/tex/latex and clone the repository using git: git clone https://github.com/altaris/kappak.git Alternatively, you can download a zip of this repository, and extract the content of /out/texmf/tex/latex/kappak/ in this/is/a/path/tex/latex/kappak . Then, open the Settings(Admin) program. Under the Roots tab, add this/is/a/path . Under the General tab, click on Refresh FNDB , then on Update Formats . MacOS No idea. Autocompletion files In TeXstudio On Linux: copy out/autocompletion/kappak.cwl to ~/.config/texstudio/completion/user/ ; On Windows: copy out/autocompletion/kappak.cwl to %APPDATA%/TeXstudio/completion/user/ ; On MacOS: no idea. In TexMaker On all platform: 1. TexMaker -> Options -> Settings File -> Save a copy of the settings file; 2. Append the content of the out/autocompletion/kappak.texmaker.txt file to the saved TexMaker configuration file, of merge it if the key Editor\\UserCompletion already exists; 3. TexMaker -> Options -> Settings File -> Replace the settings file by a new one. In Sublime-Text On Linux: copy out/autocompletion/kappak.sublime-completions to ~/.config/sublime-text-<VERSION>/Packages/User/ ; On Windows: copy out/autocompletion/kappak.sublime-completions to %APPDATA%/Sublime Text <VERSION>/Packages/User/ ; On MacOS: no idea.","title":"Readme"},{"location":"#kappak","text":"","title":"kappak"},{"location":"#introduction","text":"This is a homemade LaTeX package regrouping functionalities I deem handy. It is provided under the MIT license.","title":"Introduction"},{"location":"#documentation","text":"Reasonably up to date.","title":"Documentation"},{"location":"#installation","text":"","title":"Installation"},{"location":"#linux","text":"On Linux: execute the following commands in your favorite terminal: git clone https://github.com/altaris/kappak.git cd kappak make install You're all set!","title":"Linux"},{"location":"#windows","text":"On Winslows: create a folder this/is/a/path/tex/latex and clone the repository using git: git clone https://github.com/altaris/kappak.git Alternatively, you can download a zip of this repository, and extract the content of /out/texmf/tex/latex/kappak/ in this/is/a/path/tex/latex/kappak . Then, open the Settings(Admin) program. Under the Roots tab, add this/is/a/path . Under the General tab, click on Refresh FNDB , then on Update Formats .","title":"Windows"},{"location":"#macos","text":"No idea.","title":"MacOS"},{"location":"#autocompletion-files","text":"","title":"Autocompletion files"},{"location":"#in-texstudio","text":"On Linux: copy out/autocompletion/kappak.cwl to ~/.config/texstudio/completion/user/ ; On Windows: copy out/autocompletion/kappak.cwl to %APPDATA%/TeXstudio/completion/user/ ; On MacOS: no idea.","title":"In TeXstudio"},{"location":"#in-texmaker","text":"On all platform: 1. TexMaker -> Options -> Settings File -> Save a copy of the settings file; 2. Append the content of the out/autocompletion/kappak.texmaker.txt file to the saved TexMaker configuration file, of merge it if the key Editor\\UserCompletion already exists; 3. TexMaker -> Options -> Settings File -> Replace the settings file by a new one.","title":"In TexMaker"},{"location":"#in-sublime-text","text":"On Linux: copy out/autocompletion/kappak.sublime-completions to ~/.config/sublime-text-<VERSION>/Packages/User/ ; On Windows: copy out/autocompletion/kappak.sublime-completions to %APPDATA%/Sublime Text <VERSION>/Packages/User/ ; On MacOS: no idea.","title":"In Sublime-Text"},{"location":"environments/","text":"Environments All (non * ) environments are numbered on the same counter. Also, the environments displayed names are set to the langage specified to kappak (see the langage option). The avaible environments are: assertion assertion* assertions assertions* axiom axiom* axioms axioms* conjecture conjecture* conjectures conjectures* convention convention* conventions conventions* corollaries corollaries* corollary corollary* dedication definition definition* definitions definitions* example example* examples examples* exercise exercise* exercises exercises* lemma lemma* lemmas lemmas* notation notation* notations notations* proof proofs properties properties* property property* proposition proposition* propositions propositions* question question* questions questions* remark remark* remarks remarks* reminder reminder* reminders reminders* scholia scholia* scholias scholias* solution solutions terminologies terminologies* terminology terminology* theorem theorem* theorems theorems*","title":"Environments"},{"location":"environments/#environments","text":"All (non * ) environments are numbered on the same counter. Also, the environments displayed names are set to the langage specified to kappak (see the langage option). The avaible environments are: assertion assertion* assertions assertions* axiom axiom* axioms axioms* conjecture conjecture* conjectures conjectures* convention convention* conventions conventions* corollaries corollaries* corollary corollary* dedication definition definition* definitions definitions* example example* examples examples* exercise exercise* exercises exercises* lemma lemma* lemmas lemmas* notation notation* notations notations* proof proofs properties properties* property property* proposition proposition* propositions propositions* question question* questions questions* remark remark* remarks remarks* reminder reminder* reminders reminders* scholia scholia* scholias scholias* solution solutions terminologies terminologies* terminology terminology* theorem theorem* theorems theorems*","title":"Environments"},{"location":"home/","text":"What ? As previously written on the readme file of the repository (have you read it yet ?), this package regroups functionalities I find useful, from general style of LaTeX documents (title page, chatper style, header / footer, ...), to more specific maths related commands (commutative diagrams, category theory, ...). Consequelty, it might not be as useful for you as it is for me, but you are welcome to give a try ;) But what does this package contains ? First of all, it includes common packages ( babel , inputenc , ams stuff, ...) so as to recude your preamble to the minimum. It provides various ways to quickly modify the look of your document by passing arguments to the package, so again, minimal code is involved. You'll find more about that in the Arguments and Styles pages. Then, the functionnality that started the developpment of this package some time ago, it offers sorthands for common character styles and accents. I was extremely tired of repetedly typing \\mathbb{R} each time I wanted to refer to real numbers, so I created a specific command for that (namely \\bbRR ). Nothing too fancy here, everyone does it all the time. Nonetheless, I generalized this to all letters (including greek letters), and many styles and accents, in a command name consistent way. You'll find more about that in the Letters section. Also, when typesetting mathematical documents, I often needed to define theorem environments for non ams standard thing, such as lemma , remark , or theorems (with an \"s\"). Sometimes, said documents were in english, sometime in french (yeah I'm french). So I created commands for that too. They are explained in the Environments section. Of course, everyone has their shordhands for various mathematical commands. Mine are documented in the Maths section. Finally, my studies requires me to draw commutative diagram quite often. I started using xypic, but I quicky realized that tikz offers a more fancy rendering. Most of them are quite standard : square, triangular, ... So I created commands for that too. Now I can draw them in one command call (or up to three if custom arrows or lines are needed). Refer to Tikz section for more details. Moar & DIY & Contribute Functionalities come as my needs evolve. And functionalities are present because I needed them at some point. I try to keep this package as minimal as possible, hence it happens I remove things. I devoted a file for compatibility matters, but it's not perfectly working for the moment. Also, the maths commands present in this package are more related to algebra, topology and category theory. So depending on which subject you are willing to typeset using this package, you might find it incomplete for your needs. So rather that using it out of the box, you might want to consider diging in the code and reusing some part for your own package. Or use it partially using arguements, and other packages. Conversely, I, sometime, dig in other's code and extract cool stuffs for my own package. Feel free to give me some feedback, waffles, and to signal bugs so I can make it (the package, we are takling about the package since the beginning of this file) event better \\o/. Also, don't hesitate to send me some cool code snippets I could incorporate. I'm especially thinking about styles, header / footer, and title pages. Hey I have time to loose :) Then I suggest you whach Beaking Bad. GREAT show, though a bit slow. Well, slow is a storytelling style, which is mastered in an astonishing way, in my opinion. Of course, the actors are incredible. Last but not least, it is a non negligeable source of internet meme. Already whatched it Then maybe it's time for me to talk about disclaimers. I'll start with the classical This package comes \"as is\", with no warranty of any kind, and blablabla Also, as told before, it changes some time. I try to make it retrocompatible so as to recompile documents I created some time ago. This is achieved trough the version system (explained in the Arguments section). But then again, it doesn't perfectly work, and I'm too lazy to look into it when my life doesn't depend on recompiling a file I crated last year. Seriously though, the package doesn't change in a major way that often. Nonetheless, let me copypasta : This package comes \"as is\", with no warranty of any kind, and blablabla Also, I put it (the package) under the MIT license. Why so ? Because it is simple and permissive. You can modify, distribute it. You can even use it to become rich (commercial use, that is). Well that was more an open door for me, 'cause I'd like to become rich, but whatever, it's open for you too. What this licence also tells is that I cannot be held responsible if you computer takes fire while compiling this package.","title":"Home"},{"location":"home/#what","text":"As previously written on the readme file of the repository (have you read it yet ?), this package regroups functionalities I find useful, from general style of LaTeX documents (title page, chatper style, header / footer, ...), to more specific maths related commands (commutative diagrams, category theory, ...). Consequelty, it might not be as useful for you as it is for me, but you are welcome to give a try ;) But what does this package contains ? First of all, it includes common packages ( babel , inputenc , ams stuff, ...) so as to recude your preamble to the minimum. It provides various ways to quickly modify the look of your document by passing arguments to the package, so again, minimal code is involved. You'll find more about that in the Arguments and Styles pages. Then, the functionnality that started the developpment of this package some time ago, it offers sorthands for common character styles and accents. I was extremely tired of repetedly typing \\mathbb{R} each time I wanted to refer to real numbers, so I created a specific command for that (namely \\bbRR ). Nothing too fancy here, everyone does it all the time. Nonetheless, I generalized this to all letters (including greek letters), and many styles and accents, in a command name consistent way. You'll find more about that in the Letters section. Also, when typesetting mathematical documents, I often needed to define theorem environments for non ams standard thing, such as lemma , remark , or theorems (with an \"s\"). Sometimes, said documents were in english, sometime in french (yeah I'm french). So I created commands for that too. They are explained in the Environments section. Of course, everyone has their shordhands for various mathematical commands. Mine are documented in the Maths section. Finally, my studies requires me to draw commutative diagram quite often. I started using xypic, but I quicky realized that tikz offers a more fancy rendering. Most of them are quite standard : square, triangular, ... So I created commands for that too. Now I can draw them in one command call (or up to three if custom arrows or lines are needed). Refer to Tikz section for more details.","title":"What ?"},{"location":"home/#moar-diy-contribute","text":"Functionalities come as my needs evolve. And functionalities are present because I needed them at some point. I try to keep this package as minimal as possible, hence it happens I remove things. I devoted a file for compatibility matters, but it's not perfectly working for the moment. Also, the maths commands present in this package are more related to algebra, topology and category theory. So depending on which subject you are willing to typeset using this package, you might find it incomplete for your needs. So rather that using it out of the box, you might want to consider diging in the code and reusing some part for your own package. Or use it partially using arguements, and other packages. Conversely, I, sometime, dig in other's code and extract cool stuffs for my own package. Feel free to give me some feedback, waffles, and to signal bugs so I can make it (the package, we are takling about the package since the beginning of this file) event better \\o/. Also, don't hesitate to send me some cool code snippets I could incorporate. I'm especially thinking about styles, header / footer, and title pages.","title":"Moar &amp; DIY &amp; Contribute"},{"location":"home/#hey-i-have-time-to-loose","text":"Then I suggest you whach Beaking Bad. GREAT show, though a bit slow. Well, slow is a storytelling style, which is mastered in an astonishing way, in my opinion. Of course, the actors are incredible. Last but not least, it is a non negligeable source of internet meme.","title":"Hey I have time to loose :)"},{"location":"home/#already-whatched-it","text":"Then maybe it's time for me to talk about disclaimers. I'll start with the classical This package comes \"as is\", with no warranty of any kind, and blablabla Also, as told before, it changes some time. I try to make it retrocompatible so as to recompile documents I created some time ago. This is achieved trough the version system (explained in the Arguments section). But then again, it doesn't perfectly work, and I'm too lazy to look into it when my life doesn't depend on recompiling a file I crated last year. Seriously though, the package doesn't change in a major way that often. Nonetheless, let me copypasta : This package comes \"as is\", with no warranty of any kind, and blablabla Also, I put it (the package) under the MIT license. Why so ? Because it is simple and permissive. You can modify, distribute it. You can even use it to become rich (commercial use, that is). Well that was more an open door for me, 'cause I'd like to become rich, but whatever, it's open for you too. What this licence also tells is that I cannot be held responsible if you computer takes fire while compiling this package.","title":"Already whatched it"},{"location":"letters/","text":"Letter styles and accents How does it work ? It works pretty well. More precisely, the style and accent related commands are all build on the same scheme : the LaTeX classical backslash, the adequate prefix (see below), the desired character (for instance A for small \"a\", or KK for big \"K\"), or a greek letter. For instance : \\bbRR produces the black board style \"R\", commonly used for the set of real numbers; \\bbCC for the set of complex numbers; \\vecV for vector \"v\"; \\hatalpha for an \"alpha\" with a hat; \\barH for a \"h\" with a bar. Styles Enabled with the option +maths.characterStyles . The avaible styles are : bb : black board, it is recommended to use the option bbStyle = bbold to use this style on lower case characters; bf : bold; cal : calligraphy; frak : fraktur; it : italic; rm : roman; sf : sans serif. Accents Enabled with the option +maths.characterAccents . bar : overline; bbar : two bars; ch : check (i.e. reverse hat); ddot : two dots; dot : dot; hat : hat (duh...); o : a ring; tild : tilda; u : underline; uu : two underlines; vec : right arrow.","title":"Letter styles and accents"},{"location":"letters/#letter-styles-and-accents","text":"","title":"Letter styles and accents"},{"location":"letters/#how-does-it-work","text":"It works pretty well. More precisely, the style and accent related commands are all build on the same scheme : the LaTeX classical backslash, the adequate prefix (see below), the desired character (for instance A for small \"a\", or KK for big \"K\"), or a greek letter. For instance : \\bbRR produces the black board style \"R\", commonly used for the set of real numbers; \\bbCC for the set of complex numbers; \\vecV for vector \"v\"; \\hatalpha for an \"alpha\" with a hat; \\barH for a \"h\" with a bar.","title":"How does it work ?"},{"location":"letters/#styles","text":"Enabled with the option +maths.characterStyles . The avaible styles are : bb : black board, it is recommended to use the option bbStyle = bbold to use this style on lower case characters; bf : bold; cal : calligraphy; frak : fraktur; it : italic; rm : roman; sf : sans serif.","title":"Styles"},{"location":"letters/#accents","text":"Enabled with the option +maths.characterAccents . bar : overline; bbar : two bars; ch : check (i.e. reverse hat); ddot : two dots; dot : dot; hat : hat (duh...); o : a ring; tild : tilda; u : underline; uu : two underlines; vec : right arrow.","title":"Accents"},{"location":"maths/","text":"Maths Arrows adjunction : Adjunction arrows (left adjoint from left to right) epi : an alias for twoheadrightarrow . incl : an alias for hookrightarrow leftepi leftincl longepi longhookrightarrow longincl longleftepi longleftincl longmono longmultimap longtwoheadleftarrow longtwoheadrightarrow mono : an alias for rightarrowtail noitcnujda : Reverse adjunction arrows (left adjoint from right to left) xepi xincl xleftepi xleftincl xot xto xtwoheadleftarrow (1) xtwoheadrightarrow (1) Operators Ann Aut Bil car Card card codom coker colim Dom dom END End ev Ext Frac GL Hom Id id im Ind Ker Map Mor Ob ob Orb proj rk SL Spec Stab Sym Tor tr Categories Related commands newcategory (4): Shorthand to define new categories. For instance : \\newcommand{\\sSet}{s}{S}{et} , or \\newcategory{\\Grp}{}{G}{rp} op : The op exponent for dual categories. Predefined categories Ab Alg CAT Cat Ch Fin Graph Grp Mod Mon Op Pos pSh Ring SET Set Sh sSet Top Vect Category style Use prefix cat , for letters (any case) only, e.g. \\catCC . Misc DeclareBigOperator (2) DeclareRotatedSymbol (3) yoneda","title":"Maths"},{"location":"maths/#maths","text":"","title":"Maths"},{"location":"maths/#arrows","text":"adjunction : Adjunction arrows (left adjoint from left to right) epi : an alias for twoheadrightarrow . incl : an alias for hookrightarrow leftepi leftincl longepi longhookrightarrow longincl longleftepi longleftincl longmono longmultimap longtwoheadleftarrow longtwoheadrightarrow mono : an alias for rightarrowtail noitcnujda : Reverse adjunction arrows (left adjoint from right to left) xepi xincl xleftepi xleftincl xot xto xtwoheadleftarrow (1) xtwoheadrightarrow (1)","title":"Arrows"},{"location":"maths/#operators","text":"Ann Aut Bil car Card card codom coker colim Dom dom END End ev Ext Frac GL Hom Id id im Ind Ker Map Mor Ob ob Orb proj rk SL Spec Stab Sym Tor tr","title":"Operators"},{"location":"maths/#categories","text":"","title":"Categories"},{"location":"maths/#related-commands","text":"newcategory (4): Shorthand to define new categories. For instance : \\newcommand{\\sSet}{s}{S}{et} , or \\newcategory{\\Grp}{}{G}{rp} op : The op exponent for dual categories.","title":"Related commands"},{"location":"maths/#predefined-categories","text":"Ab Alg CAT Cat Ch Fin Graph Grp Mod Mon Op Pos pSh Ring SET Set Sh sSet Top Vect","title":"Predefined categories"},{"location":"maths/#category-style","text":"Use prefix cat , for letters (any case) only, e.g. \\catCC .","title":"Category style"},{"location":"maths/#misc","text":"DeclareBigOperator (2) DeclareRotatedSymbol (3) yoneda","title":"Misc"},{"location":"options/","text":"Options This page explains options that can be used while loading the kappak package. Simple options The name are built on the following simple rule: +something adds something, -something removes (or at lease doesn't add) something, and something changes the behavior of something. +maths : Use all maths commands. +maths.arrows : Use mathematical arrows commands. +maths.categories : Use category theory commands. +maths.characterAccents : Use mathematical character accent commands. +maths.characterStyles : Use mathematical character styles commands. +maths.misc : Use mathematical miscallenous commands. +maths.operators : Use mathematical operators commands. +maths.theoremEnvs : Use theorem environments. +stix : Use stix . +tikz : Use tikz . +xecjk : Use xecjk . -autopackages : Tells kappak to not automatically include packages. -maths.theoremStyles : Do not use theorem styles for theorem environments. -misc : Do not use kappak miscallenous commands. alpha : Do not use. bellatrix : Do not use. cortana : Do not use. durotan : Do not use. eientei : Mandatory. tikz.externalize : (EXPERIMENTAL) Use tikz compilation cache. Keyval options For each option, the default value is the first specified. bbStyle ( normal , bbold ): Sets the mathematical blackboard letter style. bibliographyStyle ( _any bibliograph style_ ): Sets the bibliography style. Only relevant if you use kdocument instead of the standard document environment. categoryStyle ( script , allscript , bf , rm , sf , tt ): Sets the category style for category theory. chapterStyle ( normal , cb , rb ): Sets the chapter style. fontSet ( normal , alternate , xcharter ): Sets the font set. headerFooterStyle ( normal , classic , cb , empty ): Sets the header and footer style. language ( english , french ): Sets the language of the document. lineSpacing ( _any numerical value_ ): Sets the line spacing. margins ( normal , reduced , minimal ): Sets the margins. numberTheoremsWithin ( _any counter, defaults to section_ ): What counter theorems should be numbered from. scriptStyle ( normal , euler , rsfs ): Sets the mathematical script style. titlePageStyle ( normal , classic , bar , gm , gb ): Sets the title page style. version ( _any version number_ ): Do not use.","title":"Options"},{"location":"options/#options","text":"This page explains options that can be used while loading the kappak package.","title":"Options"},{"location":"options/#simple-options","text":"The name are built on the following simple rule: +something adds something, -something removes (or at lease doesn't add) something, and something changes the behavior of something. +maths : Use all maths commands. +maths.arrows : Use mathematical arrows commands. +maths.categories : Use category theory commands. +maths.characterAccents : Use mathematical character accent commands. +maths.characterStyles : Use mathematical character styles commands. +maths.misc : Use mathematical miscallenous commands. +maths.operators : Use mathematical operators commands. +maths.theoremEnvs : Use theorem environments. +stix : Use stix . +tikz : Use tikz . +xecjk : Use xecjk . -autopackages : Tells kappak to not automatically include packages. -maths.theoremStyles : Do not use theorem styles for theorem environments. -misc : Do not use kappak miscallenous commands. alpha : Do not use. bellatrix : Do not use. cortana : Do not use. durotan : Do not use. eientei : Mandatory. tikz.externalize : (EXPERIMENTAL) Use tikz compilation cache.","title":"Simple options"},{"location":"options/#keyval-options","text":"For each option, the default value is the first specified. bbStyle ( normal , bbold ): Sets the mathematical blackboard letter style. bibliographyStyle ( _any bibliograph style_ ): Sets the bibliography style. Only relevant if you use kdocument instead of the standard document environment. categoryStyle ( script , allscript , bf , rm , sf , tt ): Sets the category style for category theory. chapterStyle ( normal , cb , rb ): Sets the chapter style. fontSet ( normal , alternate , xcharter ): Sets the font set. headerFooterStyle ( normal , classic , cb , empty ): Sets the header and footer style. language ( english , french ): Sets the language of the document. lineSpacing ( _any numerical value_ ): Sets the line spacing. margins ( normal , reduced , minimal ): Sets the margins. numberTheoremsWithin ( _any counter, defaults to section_ ): What counter theorems should be numbered from. scriptStyle ( normal , euler , rsfs ): Sets the mathematical script style. titlePageStyle ( normal , classic , bar , gm , gb ): Sets the title page style. version ( _any version number_ ): Do not use.","title":"Keyval options"}]}