#!/usr/bin/env python3

import re


class Command:

    def __init__(self, type, command, doc):
        self._type = type
        self._command = command
        self._doc = doc

    def __lt__(self, other):
        return self._command < other._command

    def __str__(self):
        return "\\texttt{" + self._command + "}: " + self._doc

    def match(line, type):
        match = re.search(
            r'^\s*% ([\w\.]+) ([@\w]+): (.*)$',
            line, re.I)
        if match and match.group(1) == type:
            cmd = match.group(2).replace("@", "\\@").replace("_", "\\_")
            return Command(type, cmd, match.group(3))
        else:
            return None


fileNames = ["kappak.sty"]

typemap = {
    "opt": "Package options",
    "cmd": "Command",
    "env": "Environments",
    "env.th": "Theorem environments",
    "cmd.op": "Mathematics: operators",
    "cmd.cat": "Mathematics: category theory",
    "cmd.char": "Mathematics: character styles and accents",
    "int": "Internal commands",
}


if __name__ == "__main__":

    docmap = {}

    for fn in fileNames:
        with open("src/" + fn, encoding = 'utf-8') as file:
            for line in file:
                for t in typemap.keys():
                    c = Command.match(line, t)
                    if c:
                        docmap[t] = docmap.get(t, []) + [c]
                        break

    with open("doc/kappak.tex", "w", encoding = 'utf8') as file:
        file.write("\\documentclass{article}")
        file.write("\\usepackage[eientei, +maths, bbStyle = bbold,"
                   "margins = minimal, scriptStyle = euler]{kappak}")
        file.write("\\usepackage{enumitem}")
        file.write("\\usepackage{multicol}")
        file.write("\\setlist[enumerate, 1]{noitemsep, nosep}")
        file.write("\\title{\\texttt{kappak} autogenerated documentation}")
        file.write("\\begin{document}")
        file.write("\\maketitle")
        file.write("\\tableofcontents")
        for t in typemap.keys():
            cmdlst = sorted(docmap.get(t, []))
            if len(cmdlst) == 0:
                break
            file.write("\\section{" + typemap[t] + "}")
            file.write("\\begin{multicols}{3}")
            file.write("\\begin{enumerate}")
            for c in cmdlst:
                file.write("  \\item " + str(c))
            file.write("\\end{enumerate}")
            file.write("\\end{multicols}")
        file.write("\\end{document}")
